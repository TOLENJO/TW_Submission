import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        String totalString = "";
        int totalPrice = 0;
        int promoPrice = 0;
        String divider = "-----------------------------------\n";

        String receiptString = "============= Order details =============\n";

        List<Item> itemList = itemRepository.findAll();
        List<SalesPromotion> promotionList = salesPromotionRepository.findAll();

        String[] halfItems = promotionList.get(1).getRelatedItems().toArray(new String[0]);

        for (String input : inputs) {
            String[] itemInput = input.split(" x ");

            List<Item> theItem = itemList.stream()
                    .filter(item -> item.getId().equals(itemInput[0]))
                    .collect(Collectors.toList());

            Item theListItem = theItem.get(0);
            int price = (int) theListItem.getPrice()*Integer.valueOf(itemInput[1]);
            String perItem = theListItem.getName() + " x " + itemInput[1] + " = " + price + " yuan\n";
            receiptString = receiptString + perItem;
            totalPrice += price;

            boolean found = Arrays.stream(halfItems).anyMatch(t -> t.equals(itemInput[0]));
            promoPrice += (found) ? price/2 : price;
        }
        receiptString = receiptString + divider;

        char promo = totalPrice >= 30 ? (totalPrice-promoPrice) > 6 ? 'b' : 'a' : 'c';
        switch (promo) {
            case 'a':
                totalString = "Promotion used:\n" + "Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan\n";
                totalString = totalString + divider + "Total:" + (totalPrice-6) + " yuan\n";
                break;
            case 'b':
                totalString = "Promotion used:\n" + "Half price for certain dishes (Braised chicken, Cold noodles), saving " + (totalPrice - promoPrice) + " yuan\n";
                totalString = totalString + divider + "Total:" + promoPrice + " yuan\n";
                break;
            case 'c':
                totalString = "Total:" + totalPrice + " yuan\n";
                break;
        }

        receiptString = receiptString + totalString + "===================================";
        return receiptString;
    }
}
